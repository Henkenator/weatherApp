{"version":3,"sources":["webpack:///./src/app/temperature.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/weather-chart/weather-chart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/weather-chart/weather-chart.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/weather-chart/weather-chart.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response } from \"@angular/http\";\nimport 'rxjs/Rx';\n//import {IWeatherData} from \"../src/app/iweather-data\";\n\n\nexport interface IWeatherData {\n  time: string;\n  measurement: string;\n  name:string;\n  unit:string;\n}\n\n\n@Injectable()\nexport class TemperatureService {\n\n  private weatherUrl = 'http://opendata-download-metfcst.smhi.se/api/category/pmp2g/version/2/geotype/point/lon/16.158/lat/58.5812/data.json';  // URL to web API\n  private weatherData;\n\n  constructor(private http: Http) { }\n\n  getData(col:number) {\n    return this.http.get(this.weatherUrl)\n      .map((response: Response) => {\n        this.weatherData = response.json();\n        return this.extractDataType(this.weatherData.timeSeries, col)\n      })\n  }\n\n  extractDataType(data:any,col:number){\n    let measurements: Array<IWeatherData> = [];\n\n    for (let i=0; i<data.length; i++){\n      measurements.push({time:data[i].validTime, measurement:data[i].parameters[col].values[0], name:data[i].parameters[col].name, unit:data[i].parameters[col].unit});\n    }\n    return measurements;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/temperature.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 404;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 404\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport {TemperatureService} from \"./temperature.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  private measurements:Array<any> = [];\n\n  constructor(private temperatureService: TemperatureService){\n\n  }\n  fetchData(col:number){\n    this.temperatureService.getData(col)\n      .subscribe(\n        data => {\n          this.measurements = data;\n        }\n      );\n  }\n\n  fetchTemp(){\n    this.fetchData(1);\n  }\n\n  fetchPressure(){\n    this.fetchData(0);\n  }\n\n  fetchWind(){\n    this.fetchData(4);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport {TemperatureService} from \"./temperature.service\";\nimport { WeatherChartComponent } from './weather-chart/weather-chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [TemperatureService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, OnInit, AfterViewInit, Input, OnChanges} from '@angular/core';\n\nconst Highcharts = require('highcharts');\n\n@Component({\n  selector: 'app-weather-chart',\n  templateUrl:'./weather-chart.component.html',\n  styleUrls: ['./weather-chart.component.css']\n})\nexport class WeatherChartComponent implements AfterViewInit, OnChanges {\n\n  @Input()\n  data:Array<any> = [];\n\n  constructor() {\n  }\n\n  ngOnChanges(){\n    if (this.data.length > 0){\n      let values = [];\n      let time = [];\n      for (let i=0; i<45; i++){\n        values.push(this.data[i].measurement);\n        time.push(this.data[i].time.substring(11,13));\n      }\n    Highcharts.chart('chart', {\n      title: {\n        text: this.data[0].name + ' in ' + this.data[0].unit\n      },\n      yAxis: {\n        title: {\n          text: this.data[0].name,\n        }\n      },\n      xAxis: {\n        categories: time\n      },\n      /*legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n      },*/\n      series: [\n        {\n          name: this.data[0].name,\n          data: values\n        }\n        ]\n    })\n    }\n  }\n\n  ngAfterViewInit(){\n    Highcharts.chart('chart', {\n      title: {\n        text: ''\n      },\n      series: [\n       ]\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weather-chart/weather-chart.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 669\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weather-chart/weather-chart.component.css\n// module id = 670\n// module chunks = 0","module.exports = \"<h1>\\n  Weather in Solna\\n</h1>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"fetchTemp()\\\">Temperature</button>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"fetchPressure()\\\">Pressure</button>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"fetchWind()\\\">Wind</button>\\n<app-weather-chart [data]=\\\"measurements\\\"></app-weather-chart>\\n<iframe src=\\\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d1819.904518938695!2d18.009371991669838!3d59.36040648057667!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1ssv!2sse!4v1478550502452\\\" width=\\\"600\\\" height=\\\"450\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 673\n// module chunks = 0","module.exports = \"<div id=\\\"chart\\\"></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weather-chart/weather-chart.component.html\n// module id = 674\n// module chunks = 0"],"sourceRoot":""}